import 'dart:convert';import 'package:get/get.dart';import 'package:get_storage/get_storage.dart';import 'package:tracenac/features/local_database/models/partner_local_model_class.dart';class PartnerLocalDbController extends GetxController{  final localDbStorage = GetStorage();  final dataList = <PartnerLocalModelClass>[].obs;  List filteredList = <PartnerLocalModelClass>[].obs;  final storageKey = 'partner_list';  @override  void onInit() {    // TODO: implement onInit    super.onInit();    // loadData();  }  Future<void> loadData() async {    final stored = localDbStorage.read(storageKey);    if (stored != null) {      final List decoded = jsonDecode(stored);      dataList.value = decoded.map((e) => PartnerLocalModelClass.fromJson(e)).toList();    }  }  void filterPartnerList(String query) {    if (query.isEmpty) {      filteredList = dataList;    } else {      filteredList = dataList.where((item) {        final partnerId = item.partnerID?.toLowerCase() ?? '';        final product = item.productName?.toLowerCase() ?? '';        return partnerId.contains(query.toLowerCase()) || product.contains(query.toLowerCase());      }).toList();    }    update();  }  void saveData() {    final encoded = jsonEncode(dataList.map((e) => e.toJson()).toList());    localDbStorage.write(storageKey, encoded);  }  void addLocalPartnerDb(PartnerLocalModelClass job) {    dataList.add(job);    saveData();  }  void updateLocalPartnerDb(int index, PartnerLocalModelClass job) {    dataList[index] = job;    saveData();  }  void deleteJob(int index) {    dataList.removeAt(index);    saveData();  }}