import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:tracenac/features/local_database/controller/employee_local_db_controller.dart';import '../../../core/utils/app_color.dart';import '../../create_report/create_report_screen/create_report_screen.dart';class EmployeeDataScreen extends StatefulWidget {  const EmployeeDataScreen({super.key});  @override  State<EmployeeDataScreen> createState() => _EmployeeDataScreenState();}class _EmployeeDataScreenState extends State<EmployeeDataScreen> {  final EmployeeLocalDbController employeeLocalDbController = Get.put(EmployeeLocalDbController());  @override  void initState() {    // TODO: implement initState    super.initState();    loadEmployeeDatabase();  }  Future<void> loadEmployeeDatabase()async{    await employeeLocalDbController.loadData();    setState(() {      employeeLocalDbController.filteredList = employeeLocalDbController.dataList;    });  }  @override  Widget build(BuildContext context) {    return Scaffold(      body: Obx(() {        if (employeeLocalDbController.dataList.isEmpty) {          return Center(child: Text("No employee data yet", style: TextStyle(fontFamily: "Proxima",),));        }        if(employeeLocalDbController.filteredList.isEmpty){          return Center(child: Text("No employee data found!", style: TextStyle(fontFamily: "Proxima",),));        }        return ListView.builder(          itemCount: employeeLocalDbController.filteredList.length,          itemBuilder: (context, index) {            final job = employeeLocalDbController.filteredList[index];            return Card(              margin: EdgeInsets.all(8),              color: Colors.white,              child: ListTile(                title: Text(job.systemGeneratedPartnerName ?? "", style:                TextStyle(fontFamily: "Proxima", fontSize: 14, fontWeight:                FontWeight.bold),),                subtitle: Text(job.employeeID ?? "", style: TextStyle(fontFamily: "Proxima", fontSize: 12,),),                isThreeLine: true,                trailing: Row(                  mainAxisSize: MainAxisSize.min,                  children: [                    IconButton(                      icon: Icon(Icons.edit),                      onPressed: () {                        Get.to(() => CreateReportScreen(                            editIndex: index, employeeIndex: job.employeeID,partnerIndex: "",                            // editIndex: int.parse(job.systemGeneratedPartnerId ?? "",),                          ),                        );                      },                    ),                    IconButton(                      icon: Icon(Icons.delete),                      onPressed: () async {                        await showDialog<void>(                          context: context,                          barrierDismissible: false,                          // user must tap button!                          builder: (BuildContext context) {                            return AlertDialog(                              title: const Text('Delete', style: TextStyle(fontFamily: "Proxima",),),                              content: SingleChildScrollView(                                child: ListBody(                                  children: <Widget>[                                    Text("Confirm Data delete?", style: TextStyle(fontFamily: "Proxima",),),                                  ],                                ),                              ),                              actions: <Widget>[                                TextButton(                                  child: const Text(                                    'No',                                    style: TextStyle(color: AppColor                                        .appBarColor, fontFamily: "Proxima",),                                  ),                                  onPressed: () {                                    Navigator.of(context).pop();                                  },                                ),                                TextButton(                                  child: Text(                                    'Yes',                                    style: TextStyle(color: Colors.red, fontFamily: "Proxima",),                                  ),                                  onPressed: () {                                    employeeLocalDbController.deleteEmployee(index);                                    Navigator.of(context).pop();                                  },                                ),                              ],                            );                          },                        );                      },                    ),                  ],                ),              ),            );          },        );      }),    );  }}