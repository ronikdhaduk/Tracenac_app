import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:tracenac/core/utils/app_color.dart';import 'package:tracenac/features/create_report/create_report_screen/create_report_screen.dart';import '../controller/partner_local_db_controller.dart';class PartnerLocalDataScreen extends StatefulWidget {  const PartnerLocalDataScreen({super.key});  @override  State<PartnerLocalDataScreen> createState() => _PartnerLocalDataScreenState();}class _PartnerLocalDataScreenState extends State<PartnerLocalDataScreen> {  final PartnerLocalDbController partnerLocalDbController = Get.put(PartnerLocalDbController());  @override  void initState() {    // TODO: implement initState    super.initState();    loadEmployeeDatabase();  }  Future<void> loadEmployeeDatabase()async{    await partnerLocalDbController.loadData();    setState(() {      partnerLocalDbController.filteredList = partnerLocalDbController.dataList;    });  }  @override  Widget build(BuildContext context) {    return Scaffold(      body: Obx(() {        if (partnerLocalDbController.dataList.isEmpty) {          return Center(child: Text("No partner data yet",style: TextStyle(fontFamily: "Proxima",)));        }        if(partnerLocalDbController.filteredList.isEmpty){          return Center(child: Text("No partner data found!", style: TextStyle(fontFamily: "Proxima")));        }        return ListView.builder(          itemCount: partnerLocalDbController.filteredList.length,          itemBuilder: (context, index) {            final job = partnerLocalDbController.filteredList[index];            return Card(              margin: EdgeInsets.all(8),              color: Colors.white,              child: ListTile(                title: Text(job.systemGeneratedPartnerName ?? "", style:                TextStyle(fontFamily: "Proxima", fontSize: 14,fontWeight: FontWeight.bold)),                subtitle: Text(job.systemGeneratedPartnerId ?? "", style: TextStyle(fontFamily: "Proxima", fontSize: 12,)),                isThreeLine: true,                trailing: Row(                  mainAxisSize: MainAxisSize.min,                  children: [                    IconButton(                      icon: Icon(Icons.edit),                      onPressed: () {                        Get.to(                          () => CreateReportScreen(                            editIndex: index, partnerIndex: job.systemGeneratedPartnerId ?? "", employeeIndex: "",                            // editIndex: int.parse(job.systemGeneratedPartnerId ?? "",),                          ),                        );                      },                    ),                    IconButton(                      icon: Icon(Icons.delete),                      onPressed: () async {                        await showDialog<void>(                          context: context,                          barrierDismissible: false,                          // user must tap button!                          builder: (BuildContext context) {                            return AlertDialog(                              title: const Text('Delete', style: TextStyle(fontFamily: "Proxima"),),                              content: SingleChildScrollView(                                child: ListBody(                                  children: <Widget>[                                    Text("Confirm Data delete?", style: TextStyle(fontFamily: "Proxima"),),                                  ],                                ),                              ),                              actions: <Widget>[                                TextButton(                                  child: const Text(                                    'No',                                    style: TextStyle(color: AppColor                                        .appBarColor, fontFamily: "Proxima"),                                  ),                                  onPressed: () {                                    Navigator.of(context).pop();                                  },                                ),                                TextButton(                                  child: Text(                                    'Yes',                                    style: TextStyle(color: Colors.red, fontFamily: "Proxima"),                                  ),                                  onPressed: () {                                    partnerLocalDbController.deleteJob(index);                                    Navigator.of(context).pop();                                  },                                ),                              ],                            );                          },                        );                      },                    ),                  ],                ),              ),            );          },        );      }),    );  }}