import 'dart:developer';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:tracenac/features/local_database/screen/employee_data_screen.dart';import 'package:tracenac/features/local_database/screen/partner_local_data_screen.dart';import '../../../core/utils/app_color.dart';import '../controller/employee_local_db_controller.dart';import '../controller/partner_local_db_controller.dart';class LocalDataScreen extends StatefulWidget {  const LocalDataScreen({super.key});  @override  State<LocalDataScreen> createState() => _LocalDataScreenState();}class _LocalDataScreenState extends State<LocalDataScreen> with TickerProviderStateMixin {  late TabController _tabController;  final TextEditingController allSearchController = TextEditingController();  final EmployeeLocalDbController employeeLocalDbController = Get.put(EmployeeLocalDbController());  final PartnerLocalDbController partnerLocalDbController = Get.put(PartnerLocalDbController());  @override  void initState() {    // TODO: implement initState    super.initState();    _tabController = TabController(length: 2, vsync: this);  }  @override  void dispose() {    _tabController.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    return SafeArea(      child: Scaffold(        appBar: AppBar(title: Text("All Local Data", style: TextStyle(fontFamily: "Proxima",),)),        body: Padding(          padding: const EdgeInsets.all(8.0),          child: Column(            crossAxisAlignment: CrossAxisAlignment.start,            children: [              SizedBox(height: 10),              TextFormField(                controller: allSearchController,                style: TextStyle(fontFamily: "Proxima", fontSize: 14),                onChanged: (value) {                  if(_tabController.index == 0){                    log("employee search");                    employeeLocalDbController.filterEmployeeList(value);                    setState(() {});                  }else{                    log("partner search");                    partnerLocalDbController.filterPartnerList(value);                    setState(() {});                  }                },                decoration: InputDecoration(                  suffixIcon: IconButton(                    onPressed: () {                      allSearchController.clear();                      employeeLocalDbController.filterEmployeeList("");                      partnerLocalDbController.filterPartnerList("");                      setState(() {});                    },                    icon: Icon(                        allSearchController.text.isEmpty                            ? Icons.search                            : Icons.close,color: Colors.black                    ),                  ),                  contentPadding: EdgeInsets.symmetric(                    vertical: 0,                    horizontal: 20,                  ),                  enabledBorder: OutlineInputBorder(                    borderRadius: BorderRadius.circular(100),                  ),                  focusedBorder: OutlineInputBorder(                    borderRadius: BorderRadius.circular(100),                    borderSide: BorderSide(                      color: AppColor.appBarColor,                    ),                  ),                ),              ),              SizedBox(height: 10),              Padding(                padding: const EdgeInsets.symmetric(vertical: 4.0),                child: Container(                  height: Get.height * 0.06,                  width: Get.width,                  decoration: BoxDecoration(                    borderRadius: BorderRadius.circular(50),                    color: AppColor.appBarColor,                  ),                  child: TabBar(                    controller: _tabController,                    padding: EdgeInsets.all(2),                    dividerHeight: 0,                    unselectedLabelColor: Colors.white,                    // labelColor: Colors.white,                    labelColor: AppColor.appBarColor,                    indicator: BoxDecoration(                      borderRadius: BorderRadius.circular(50),                      // color: const Color.fromRGBO(0, 149, 117, 1),                      color: Colors.white,                    ),                    indicatorSize: TabBarIndicatorSize.tab,                    tabs: const [                      Padding(                        padding: EdgeInsets.symmetric(vertical: 8.0),                        child: Center(                          child: Text(                            "Employee",                            style: TextStyle(                              fontSize: 14,                              fontFamily: "Proxima",                              fontWeight: FontWeight.bold,                            ),                          ),                        ),                      ),                      Padding(                        padding: EdgeInsets.symmetric(vertical: 8.0),                        child: Center(                          child: Text(                            "Partner",                            style: TextStyle(                              fontSize: 14,                              fontFamily: "Proxima",                              fontWeight: FontWeight.bold,                            ),                          ),                        ),                      ),                    ],                  ),                ),              ),              Expanded(                child: TabBarView(                  controller: _tabController,                  children: [EmployeeDataScreen(), PartnerLocalDataScreen()],                ),              ),            ],          ),        ),      ),    );  }}