import 'package:flutter/material.dart';import 'package:tracenac/core/utils/app_color.dart';import 'package:tracenac/routes/app_routes.dart';// MODEL CLASSclass OnboardingPage {  final String imageAsset;  final String title;  final String subtitle;  OnboardingPage({    required this.imageAsset,    required this.title,    required this.subtitle,  });}// ONBOARDING SCREENclass OnboardingScreen extends StatefulWidget {  const OnboardingScreen({super.key});  @override  State<OnboardingScreen> createState() => _OnboardingScreenState();}class _OnboardingScreenState extends State<OnboardingScreen> {  final PageController _pageController = PageController();  int _currentPage = 0;  final List<OnboardingPage> _pages = [    OnboardingPage(      imageAsset: 'assets/images/business1.png',      title: "Title 1",      subtitle:      "description 1",    ),    OnboardingPage(      imageAsset: 'assets/images/business2.png',      title: "Title 2",      subtitle:      "description 2",    ),    OnboardingPage(      imageAsset: 'assets/images/business1.png',      title: "Title 3",      subtitle:      "description 3",    ),  ];  void _nextPage() {    if (_currentPage < _pages.length - 1) {      _pageController.nextPage(        duration: const Duration(milliseconds: 300),        curve: Curves.easeInOut,      );    } else {      // Go to main app or home screen      // Get.to(()=> LoginScreen());      Navigator.pushNamed(context, AppRoutes.loginScreen);    }  }  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Colors.white,      body: SafeArea(        child: Column(          children: [            const SizedBox(height: 20),            Text(              "Panasonic",              style: TextStyle(                fontSize: 24,                fontWeight: FontWeight.bold,                color: AppColor.appBarColor,              ),            ),            const SizedBox(height: 10),            // PAGE VIEW            Expanded(              child: PageView.builder(                controller: _pageController,                itemCount: _pages.length,                onPageChanged: (index) {                  setState(() {                    _currentPage = index;                  });                },                itemBuilder: (context, index) {                  final page = _pages[index];                  return Padding(                    padding: const EdgeInsets.symmetric(horizontal: 24),                    child: Column(                      children: [                        Expanded(                          child: Image.asset(                            page.imageAsset,                            fit: BoxFit.contain,                          ),                        ),                        const SizedBox(height: 20),                        Text(                          page.title,                          style: const TextStyle(                            fontSize: 20,                            fontWeight: FontWeight.bold,                          ),                        ),                        const SizedBox(height: 10),                        Text(                          page.subtitle,                          textAlign: TextAlign.center,                          style: const TextStyle(                            fontSize: 14,                            color: Colors.black54,                          ),                        ),                        const SizedBox(height: 30),                      ],                    ),                  );                },              ),            ),            // DOT INDICATORS            Row(              mainAxisAlignment: MainAxisAlignment.center,              children: List.generate(_pages.length, (index) {                return Container(                  margin: const EdgeInsets.symmetric(horizontal: 4),                  width: 20,                  height: 5,                  decoration: BoxDecoration(                    borderRadius:BorderRadius.circular(12),                    color: _currentPage == index                        ? AppColor.appBarColor                        : Colors.grey[300],                  ),                );              }),            ),            const SizedBox(height: 20),            // BUTTONS            Padding(              padding: const EdgeInsets.symmetric(horizontal: 20),              child: Column(                children: [                  ElevatedButton(                    onPressed: _nextPage,                    style: ElevatedButton.styleFrom(                      backgroundColor: AppColor.appBarColor,                      minimumSize: const Size.fromHeight(50),                      shape: RoundedRectangleBorder(                        borderRadius: BorderRadius.circular(10),                      ),                    ),                    child: Text(                      _currentPage == _pages.length - 1 ? "Get Started" : "Next",                      style: const TextStyle(color: Colors.white),                    ),                  ),                  const SizedBox(height: 10),                  OutlinedButton(                    onPressed: () {                      // Skip onboarding                      // Get.to(()=> LoginScreen());                      Navigator.pushNamed(context, AppRoutes.loginScreen);                    },                    style: OutlinedButton.styleFrom(                      minimumSize: const Size.fromHeight(50),                      shape: RoundedRectangleBorder(                        borderRadius: BorderRadius.circular(10),                      ),                    ),                    child: const Text("Skip", style: TextStyle(color: AppColor.appBarColor),),                  ),                ],              ),            ),            const SizedBox(height: 20),          ],        ),      ),    );  }}