import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:tracenac/core/APIClass/APIClass.dart';import 'package:tracenac/features/tracenac_get_user/model_class/tracenac_get_user_model_class.dart';class TracenacGetUserConroller extends GetxController{  final APIClass _apiClass = APIClass();  RxBool isLoading = false.obs;  TracenacUserModelClass? tracenacUserModelClass;  List getUserList = [];  List<Msg>? allUsers = [];  List<Msg>? filteredUsers = [];  Future<void> getUserTracenac(text)async{    isLoading(true);    tracenacUserModelClass = await _apiClass.getTracenacUserApi(text);    if(tracenacUserModelClass?.status == true){      isLoading(false);    }else{      Get.snackbar("Failed", "Something Wrong?", backgroundColor: Colors.white, colorText: Colors.black);      isLoading(false);    }  }  void filterUsers(String query) {    final lowerQuery = query.toLowerCase();      filteredUsers = allUsers!.where((user) {        final name = user.name?.toLowerCase() ?? '';        final email = user.email?.toLowerCase() ?? '';        return name.contains(lowerQuery) || email.contains(lowerQuery);      }).toList();    update();  }}