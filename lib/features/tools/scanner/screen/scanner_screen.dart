import 'dart:developer';import 'package:audioplayers/audioplayers.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:mobile_scanner/mobile_scanner.dart' as mobile;import 'package:mobile_scanner/mobile_scanner.dart';import '../controller/scanner_controller.dart';class QRScannerScreen extends StatefulWidget {  const QRScannerScreen({super.key});  @override  State<QRScannerScreen> createState() => _QRScannerScreenState();}class _QRScannerScreenState extends State<QRScannerScreen> {  late mobile.MobileScannerController cameraController;  final ScannerController controller = Get.put(ScannerController());  var uCode;  String _scanBarcode = '';  bool _isScanning = true;  String? resultStatus;  var totalScan = 0, units;  Key _scannerKey = UniqueKey();  String? scanlength;  Future<void> _onDetect(BarcodeCapture capture) async {    if (!_isScanning) return;    final barcode = capture.barcodes.first;    final String? code = barcode.rawValue;    if (code != null) {      _isScanning = false;      cameraController.stop();      totalScan++;      _scanBarcode = code;      await _onQRView(code);    }  }  @override  void initState() {    cameraController = mobile.MobileScannerController();    super.initState();  }  @override  void dispose() {    cameraController.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    // return Scaffold(    //   appBar: AppBar(title: const Text('Scan QR Code')),    //   body: MobileScanner(    //     controller: cameraController,    //     onDetect: _onDetect,    //   ),    //   floatingActionButton: FloatingActionButton(    //     onPressed: () {    //       cameraController.toggleTorch();    //     },    //     child: const Icon(Icons.flashlight_on),    //   ),    // );    return Scaffold(      floatingActionButton:          _isScanning              ? FloatingActionButton(                onPressed: () {                  cameraController.toggleTorch();                },                child: const Icon(Icons.flashlight_on),              )              : null,      body: Obx(        () =>            controller.isLoadaing.value                ? Center(child: CircularProgressIndicator())                : Column(                  children: [                    _isScanning                        ? Expanded(                          child: mobile.MobileScanner(                            key:                                _scannerKey, // This forces the scanner to reinit                            controller: cameraController,                            onDetect: _onDetect,                          ),                        )                        : SizedBox.shrink(),                    !_isScanning                        ? Expanded(                          flex: 1,                          child: FittedBox(                            fit: BoxFit.contain,                            child: Column(                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,                              children: <Widget>[                                resultStatus != null                                    ? buildChip()                                    : SizedBox(height: 30.0),                                // result != null                                controller.uniqueCodeData != null                                    ? SizedBox(                                      height:                                          MediaQuery.of(context).size.height *                                          0.75,                                      width: MediaQuery.of(context).size.width,                                      child: Card(                                        elevation: 4,                                        shape: RoundedRectangleBorder(                                          borderRadius: BorderRadius.circular(                                            12,                                          ),                                        ),                                        child: Padding(                                          padding: const EdgeInsets.all(16.0),                                          child: Column(                                            crossAxisAlignment:                                                CrossAxisAlignment.start,                                            children: [                                              Row(                                                mainAxisAlignment:                                                    MainAxisAlignment                                                        .spaceBetween,                                                children: [                                                  Column(                                                    crossAxisAlignment:                                                        CrossAxisAlignment                                                            .start,                                                    children: [                                                      Text(                                                        "item code",                                                        // Replace with dynamic data if needed                                                        style: TextStyle(                                                          fontSize: 18,                                                          fontWeight:                                                              FontWeight.bold,                                                        ),                                                      ),                                                      Text(                                                        controller                                                                .uniqueCodeData                                                                ?.itemCode ??                                                            "",                                                        // Example, replace with actual code                                                        style: TextStyle(                                                          fontSize: 16,                                                          color:                                                              Colors.grey[600],                                                        ),                                                      ),                                                      SizedBox(height: 4),                                                      Container(                                                        decoration: BoxDecoration(                                                          color:                                                              Colors.grey[200],                                                          borderRadius:                                                              BorderRadius.circular(                                                                8,                                                              ),                                                        ),                                                        padding:                                                            EdgeInsets.symmetric(                                                              horizontal: 8,                                                              vertical: 4,                                                            ),                                                        child: Text(                                                          controller                                                                  .uniqueCodeData                                                                  ?.uniqueCode ??                                                              "",                                                          // productData[0].category.toString(),                                                          // Example category, replace with actual data                                                          style: TextStyle(                                                            color:                                                                Colors.black54,                                                          ),                                                        ),                                                      ),                                                    ],                                                  ),                                                  // SizedBox(width: 16),                                                ],                                              ),                                              SizedBox(height: 16),                                              Text(                                                'supplier',                                                style: TextStyle(                                                  fontSize: 16,                                                  fontWeight: FontWeight.bold,                                                ),                                              ),                                              SizedBox(height: 8),                                              Text(                                                controller                                                        .uniqueCodeData                                                        ?.supplier ??                                                    "",                                                style: TextStyle(                                                  color: Colors.grey[600],                                                ),                                              ),                                              SizedBox(height: 16),                                              Text(                                                'Product Details',                                                style: TextStyle(                                                  fontSize: 16,                                                  fontWeight: FontWeight.bold,                                                ),                                              ),                                              SizedBox(height: 8),                                              Table(                                                border: TableBorder.all(                                                  color: Colors.grey[300]!,                                                  borderRadius:                                                      BorderRadius.circular(8),                                                ),                                                columnWidths: const {                                                  0: FlexColumnWidth(2),                                                  1: FlexColumnWidth(3),                                                },                                                children: [                                                  TableRow(                                                    children: [                                                      Padding(                                                        padding:                                                            const EdgeInsets.all(                                                              8.0,                                                            ),                                                        child: Text(                                                          'assetId',                                                          style: TextStyle(                                                            fontWeight:                                                                FontWeight.bold,                                                          ),                                                        ),                                                      ),                                                      Padding(                                                        padding:                                                            const EdgeInsets.all(                                                              8.0,                                                            ),                                                        child: Text(                                                          controller                                                                  .productData                                                                  ?.assetId ??                                                              "",                                                        ),                                                      ),                                                    ],                                                  ),                                                  TableRow(                                                    children: [                                                      Padding(                                                        padding:                                                            const EdgeInsets.all(                                                              8.0,                                                            ),                                                        child: Text(                                                          'Unique Code',                                                          style: TextStyle(                                                            fontWeight:                                                                FontWeight.bold,                                                          ),                                                        ),                                                      ),                                                      Padding(                                                        padding:                                                            const EdgeInsets.all(                                                              8.0,                                                            ),                                                        child: Text(                                                          uCode,                                                        ), // Replace with actual data                                                      ),                                                    ],                                                  ),                                                  TableRow(                                                    children: [                                                      Padding(                                                        padding:                                                            const EdgeInsets.all(                                                              8.0,                                                            ),                                                        child: Text(                                                          'assetName',                                                          style: TextStyle(                                                            fontWeight:                                                                FontWeight.bold,                                                          ),                                                        ),                                                      ),                                                      Padding(                                                        padding:                                                            const EdgeInsets.all(                                                              8.0,                                                            ),                                                        child: Text(                                                          controller                                                                  .productData                                                                  ?.assetName ??                                                              "",                                                        ), //                                                        // Replace                                                        // with                                                        // actual data                                                      ),                                                    ],                                                  ),                                                ],                                              ),                                            ],                                          ),                                        ),                                      ),                                    )                                    : SizedBox(height: 20.0),                                Container(                                  margin: const EdgeInsets.all(8),                                  child: IconButton(                                    onPressed: () async {                                      await cameraController.stop();                                      cameraController.dispose();                                      setState(() {                                        resultStatus = null;                                        cameraController =                                            mobile.MobileScannerController(); // new instance!                                        _scannerKey =                                            UniqueKey(); // force MobileScanner rebuild                                        _isScanning = true;                                      });                                      log(                                        "My LogData ==> resultStatus $resultStatus",                                      );                                      log(                                        "My LogData ==> _scanBarcode $_scanBarcode",                                      );                                      log(                                        "My LogData ==> resultStatus ${resultStatus.toString()}",                                      );                                      // await controller?.resumeCamera();                                    },                                    tooltip: "Resume",                                    icon: Icon(Icons.restart_alt, size: 30),                                  ),                                ),                              ],                            ),                          ),                        )                        : SizedBox.shrink(),                  ],                ),      ),    );  }  playBeepAudio() async {    AudioPlayer audioPlayer = AudioPlayer();    String filePath = 'audio/beep_audio.mpeg';    try {      await audioPlayer.setSourceAsset(filePath);      await audioPlayer.resume();      await audioPlayer.setVolume(1.0);      print('Audio playback started. ${await audioPlayer.state}');      setState(() {});    } catch (e) {      print('Audio playback Error during audio playback: $e');    }  }  _onQRView(scanData) async {    log("My LogData ==> scanData $scanData");    log(      "My LogData Kalpesh ==>  reportData widget 5 ==> _onQRView getReportData==> {widget.reportDataItems}",    );    setState(() {      cameraController.start();      Uri uri = Uri.parse(scanData);      uCode = uri.pathSegments.last;      print("My LogData ==> barcodeScanRes uCode $uCode");    });    await controller.checkUniCodeApi(uCode);  }  Widget buildChip() {    return controller.isLoadaing.value        ? SizedBox(          width: 15.0,          height: 15.0,          child: CircularProgressIndicator(strokeWidth: 2),        )        : Container(          margin: EdgeInsets.all(2.0),          padding: EdgeInsets.only(            top: 2.0,            bottom: 2.0,            left: 5.0,            right: 5.0,          ),          alignment: Alignment.center,          decoration: BoxDecoration(            borderRadius: BorderRadius.all(Radius.circular(10.0)),            color: getChipColor(),          ),          height: 25.0,          // width: 100.0,          child: Text(            getResult(resultStatus!),            style: TextStyle(              fontSize: 12.0,              // fontWeight: FontWeight.bold,            ),          ),        );  }  String getResult(String result) {    log('MyLogData getResult ==> ' + result.toString());    switch (resultStatus!) {      case 'fake':        {          return 'Spurious';        }      case 'item_in_warenty':        {          return 'Under Warranty';        }      case 'warrenty_already_claimed':        {          return 'Scanned Earlier';        }      case 'out_of_warranty':        {          return 'Out of Warranty';        }      default:        {          return 'N/A';        }    }  }  Color getChipColor() {    switch (resultStatus!) {      case 'fake':        {          return Colors.red;        }      case 'Under Warranty':        {          return Colors.green;        }      case 'Out of Warranty':        {          return Colors.orange;        }      case 'genuine':        {          return Colors.blue;        }      default:        {          return Colors.grey;        }    }  }}class ResultScreen extends StatelessWidget {  final String code;  const ResultScreen({super.key, required this.code});  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(title: const Text('Scan Result')),      body: Center(        child: Text(          'Scanned Code:\n$code',          style: const TextStyle(fontSize: 20),          textAlign: TextAlign.center,        ),      ),    );  }}