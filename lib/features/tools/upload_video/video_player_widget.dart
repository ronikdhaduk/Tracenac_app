// import 'dart:io';//// import 'package:video_player/video_player.dart';// import 'package:flutter/material.dart';//// class VideoPlayerWidget extends StatefulWidget {//   final File file;////   const VideoPlayerWidget({Key? key, required this.file}) : super(key: key);////   @override//   State<VideoPlayerWidget> createState() => _VideoPlayerWidgetState();// }//// class _VideoPlayerWidgetState extends State<VideoPlayerWidget> {//   late VideoPlayerController _controller;////   @override//   void initState() {//     super.initState();//     _controller = VideoPlayerController.file(widget.file)//       ..initialize().then((_) {//         setState(() {});//         _controller.setLooping(true);//         _controller.play();//       });//   }////   @override//   void dispose() {//     _controller.dispose();//     super.dispose();//   }////   @override//   Widget build(BuildContext context) {//     return _controller.value.isInitialized//         ? AspectRatio(//       aspectRatio: _controller.value.aspectRatio,//       child: VideoPlayer(_controller),//     )//         : Center(child: CircularProgressIndicator());//   }// }import 'dart:io';import 'package:flutter/material.dart';import 'package:video_player/video_player.dart';class VideoPlayerWidget extends StatefulWidget {  final File file;  const VideoPlayerWidget({Key? key, required this.file}) : super(key: key);  @override  State<VideoPlayerWidget> createState() => _VideoPlayerWidgetState();}class _VideoPlayerWidgetState extends State<VideoPlayerWidget> {  late VideoPlayerController _controller;  bool _isPlaying = false;  @override  void initState() {    super.initState();    _controller = VideoPlayerController.file(widget.file)      ..initialize().then((_) {        setState(() {});        _controller.setLooping(true);        _controller.play();        _isPlaying = true;      });  }  @override  void dispose() {    _controller.dispose();    super.dispose();  }  void _togglePlayPause() {    setState(() {      if (_controller.value.isPlaying) {        _controller.pause();        _isPlaying = false;      } else {        _controller.play();        _isPlaying = true;      }    });  }  @override  Widget build(BuildContext context) {    return _controller.value.isInitialized        ? Stack(      alignment: Alignment.center,      children: [        AspectRatio(          aspectRatio: _controller.value.aspectRatio.sign,          child: GestureDetector(            onTap: _togglePlayPause,            child: VideoPlayer(_controller),          ),        ),        if (!_isPlaying)          Icon(Icons.play_circle_fill, size: 64, color: Colors.white70),      ],    )        : Center(child: CircularProgressIndicator());  }}