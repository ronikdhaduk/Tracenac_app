import 'dart:developer';import 'dart:io';import 'package:carousel_slider/carousel_controller.dart';import 'package:carousel_slider/carousel_slider.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:tracenac/features/tools/upload_video/upload_video_controller.dart';import 'package:tracenac/features/tools/upload_video/video_player_widget.dart';import '../../../core/utils/app_color.dart';import '../../assets/assets_model_class/assets_model_class.dart';import '../../report_template/controller/report_template_controller.dart';class UploadVideo extends StatefulWidget {  const UploadVideo({super.key});  @override  State<UploadVideo> createState() => _UploadVideoState();}class _UploadVideoState extends State<UploadVideo> {  final UploadVideoController controller = Get.put(UploadVideoController());  int _current = 0;  CarouselSliderController controllerSlider = CarouselSliderController();  @override  void initState() {    // TODO: implement initState    super.initState();    controller.load();    controller.getAssetsApi("");  }  @override  void dispose() {    // TODO: implement dispose    super.dispose();    controller.removeAllFiled;  }  bool isVideo(String path) {    return path.toLowerCase().endsWith(".mp4") || path.toLowerCase().endsWith(".mov");  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text("Upload File", style: TextStyle(fontFamily: "Proxima")),      ),      body: SafeArea(        child: SingleChildScrollView(          child: Center(            child: Obx(                  () =>              controller.isLoading.value                  ? Center(child: CircularProgressIndicator())                  : Padding(                padding: const EdgeInsets.all(18.0),                child: Column(                  crossAxisAlignment: CrossAxisAlignment.start,                  mainAxisAlignment: MainAxisAlignment.start,                  children: [                    controller.imageFiles.isEmpty ? Center(child: Text                      ("Please select Video")) : CarouselSlider(                      carouselController: controllerSlider,                      items: controller.imageFiles.map((file) {                        return Builder(                          builder: (BuildContext context) {                            return Container(                              width: MediaQuery.of(context).size.width,                              margin: const EdgeInsets.symmetric(horizontal: 5.0),                              decoration: BoxDecoration(                                color: Colors.grey[200],                                borderRadius: BorderRadius.circular(15),                              ),                              child: ClipRRect(                                borderRadius: BorderRadius.circular(15),                                child: isVideo(file.path)                                    ? VideoPlayerWidget(file: File(file.path))                                    : FadeInImage(                                  placeholder: AssetImage('assets/images/business2.png'),                                  image: FileImage(File(file.path)),                                  fit: BoxFit.cover,                                ),                              ),                            );                          },                        );                      }).toList(),                      options: CarouselOptions(                        height: 350.0,                        enlargeCenterPage: true,                        enableInfiniteScroll: false,                        // autoPlay: true,                        onPageChanged: (index, reason) {                          setState(() {                            _current = index;                          });                        },                      ),                    ),                    const SizedBox(height: 28),                    Row(                      mainAxisAlignment: MainAxisAlignment.center,                      children:                      controller.imageFiles.asMap().entries.map((                          entry,                          ) {                        return GestureDetector(                          onTap:                              () => controllerSlider.animateToPage(                            entry.key,                          ),                          child: Container(                            width: 8.0,                            height: 8.0,                            margin: const EdgeInsets.symmetric(                              horizontal: 4.0,                            ),                            decoration: BoxDecoration(                              shape: BoxShape.circle,                              color:                              _current == entry.key                                  ? Colors.blueAccent                                  : Colors.grey,                            ),                          ),                        );                      }).toList(),                    ),                    SizedBox(height: 30),                    Align(                      alignment: Alignment.center,                      child: InkWell(                        onTap: () async {                          // await controller.pickMultipleImagesFromGallery();                          await controller.pickMultipleVideos();                          setState(() {});                        },                        child: Text(                          "Add video",                          style: TextStyle(                            fontFamily: "Proxima",                            color: AppColor.appBarColor,                            fontSize: 16,                            fontWeight: FontWeight.bold,                          ),                        ),                      ),                    ),                    SizedBox(height: 30),                    Text(                      "Assert ID",                      style: const TextStyle(                        fontFamily: "Proxima",                        fontWeight: FontWeight.w600,                        fontSize: 14,                      ),                    ),                    const SizedBox(height: 4),                    // TextFormField(                    //   controller: controller.assetsIDController,                    //   style: TextStyle(fontFamily: "Proxima"),                    //   decoration: InputDecoration(                    //     hintText: "Input title",                    //     hintStyle: TextStyle(fontFamily: "Proxima"),                    //     border: OutlineInputBorder(                    //       borderRadius: BorderRadius.circular(8),                    //       borderSide: BorderSide(                    //         color: Colors.grey.shade300,                    //       ),                    //     ),                    //     filled: true,                    //     fillColor: Colors.white,                    //   ),                    // ),                    Builder(                      builder: (context) {                        final assetsList = controller.assetsModelClass?.asetsMsg ??[];                        final dropdownValue = assetsList.firstWhere((e) => e.assetName == controller.selectedAssetsName?.value,                          orElse: () => assetsList.first,);                        return Column(                          crossAxisAlignment: CrossAxisAlignment.start,                          children: [                            DropdownButtonFormField<AssetsMsg>(                              value: dropdownValue,                              style: TextStyle(                                fontSize: 14,                                fontFamily: "Proxima",                                fontWeight:                                FontWeight.w400,                                color: Colors.black,                              ),                              items: assetsList.map((partner,) {                                final displayText = "${partner.assetId ?? 'ID'} - ${partner.assetName ?? 'N/A'}";                                return DropdownMenuItem<AssetsMsg>(                                  value: partner,                                  child: Text(                                    displayText,                                  ),                                );                              }).toList(),                              onChanged: (selectedPartner) {                                if (selectedPartner != null) {                                  controller.selectedAssetsName?.value = selectedPartner.assetName ?? '';                                  // controller1.assetsNameController.text = selectedPartner.assetName ?? '';                                  controller.assetsIDController.text = selectedPartner.assetId ?? '';                                  log("controller.assetsIDController.text==> ""${controller.assetsIDController.text}");                                  // controller.assetsCodeController.text = selectedPartner.categoryId ?? '';                                }                              },                              decoration: InputDecoration(                                hintText:                                "Select Partner",                                border: OutlineInputBorder(                                  borderRadius:                                  BorderRadius.circular(                                    12,                                  ),                                ),                              ),                            ),                            SizedBox(                              height: 20,                            ),                          ],                        );                      },                    ),                    const SizedBox(height: 4),                    Text(                      "Description",                      style: const TextStyle(                        fontFamily: "Proxima",                        fontWeight: FontWeight.w600,                        fontSize: 14,                      ),                    ),                    const SizedBox(height: 4),                    TextFormField(                      controller: controller.descriptionController,                      style: TextStyle(fontFamily: "Proxima"),                      decoration: InputDecoration(                        hintText: "Input Description",                        hintStyle: TextStyle(fontFamily: "Proxima"),                        border: OutlineInputBorder(                          borderRadius: BorderRadius.circular(8),                          borderSide: BorderSide(                            color: Colors.grey.shade300,                          ),                        ),                        filled: true,                        fillColor: Colors.white,                      ),                    ),                    SizedBox(height: 30),                    Row(                      children: [                        Expanded(                          child: OutlinedButton(                            style: OutlinedButton.styleFrom(                              fixedSize: Size(200, 50),                            ),                            onPressed: () {                              if (controller.imageFiles.isNotEmpty) {                                controller.save();                              } else {}                            },                            child: Text(                              "Save draft",                              style: TextStyle(fontFamily: "Proxima"),                            ),                          ),                        ),                        SizedBox(width: 10),                        Expanded(                          child: ElevatedButton(                            style: ElevatedButton.styleFrom(                              fixedSize: Size(200, 50),                            ),                            onPressed: () {                              if (controller.imageFiles.isNotEmpty) {                                controller.uploadFile();                              } else {                                Get.snackbar(                                  "Failed",                                  "Please Select File",                                  backgroundColor: Colors.white,                                  colorText: Colors.black,                                );                              }                            },                            child: Text(                              "submit",                              style: TextStyle(fontFamily: "Proxima"),                            ),                          ),                        ),                      ],                    ),                  ],                ),              ),            ),          ),        ),      ),    );  }}