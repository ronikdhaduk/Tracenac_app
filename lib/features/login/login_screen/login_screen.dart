import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:tracenac/core/utils/app_color.dart';import '../controller/login_controller.dart';class LoginScreen extends StatefulWidget {  const LoginScreen({super.key});  @override  State<LoginScreen> createState() => _LoginScreenState();}class _LoginScreenState extends State<LoginScreen> {  final LoginController controller = Get.put(LoginController());  final formKey = GlobalKey<FormState>();  @override  Widget build(BuildContext context) {    return Scaffold(      body: Center(        child: Padding(          padding: const EdgeInsets.all(20.0),          child: Obx(            () => Form(              key: formKey,              child: Column(                crossAxisAlignment: CrossAxisAlignment.center,                mainAxisAlignment: MainAxisAlignment.center,                children: [                  Text(                    "Login",                    style: TextStyle(                      fontFamily: "Proxima",                      fontSize: 30,                      fontWeight: FontWeight.bold,                      color: AppColor.buttonColor,                    ),                  ),                  SizedBox(height: 30),                  TextFormField(                    cursorColor: AppColor.iconColor,                    controller: controller.emailController,                    style: TextStyle(fontWeight: FontWeight.w400, fontSize:                    16, fontFamily: "Proxima"),                    decoration: InputDecoration(                      prefixIcon: const Icon(                        Icons.email,                        color: AppColor.iconColor,                      ),                      hintText: "Email",                      hintStyle: const TextStyle(                        fontFamily: "Proxima",                        fontSize: 16,                        fontWeight: FontWeight.w400,                        color: AppColor.iconColor,                      ),                      enabledBorder: OutlineInputBorder(                        borderRadius: BorderRadius.circular(15),                        // borderSide: const BorderSide(color: AppColors.borderColor,)                      ),                      focusedBorder: OutlineInputBorder(                        borderRadius: BorderRadius.circular(15),                        // borderSide: const BorderSide(color: AppColors.borderColor,)                      ),                    ),                    validator: (value) {                      if (value == null || value.isEmpty) {                        return 'Please enter an email';                      }                      final emailRegex = RegExp(                        r'^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$',                      );                      if (!emailRegex.hasMatch(value)) {                        return 'Enter a valid email';                      }                      return null;                    },                  ),                  SizedBox(height: 10),                  TextFormField(                    obscureText: !controller.isPasswordVisibility.value,                    controller: controller.passwordController,                    cursorColor: AppColor.iconColor,                    style: TextStyle(fontWeight: FontWeight.w400, fontSize:                    16, fontFamily: "Proxima"),                    decoration: InputDecoration(                      prefixIcon: const Icon(                        Icons.key,                        color: AppColor.iconColor,                      ),                      hintText: "Password",                      hintStyle: const TextStyle(                        fontFamily: "Proxima",                        fontSize: 16,                        fontWeight: FontWeight.w400,                        color: AppColor.iconColor,                      ),                      suffixIcon: IconButton(                        onPressed: () {                          controller.isPasswordVisibility.value =                              !controller.isPasswordVisibility.value;                        },                        icon: Icon(                          controller.isPasswordVisibility.value                              ? Icons.visibility                              : Icons.visibility_off,                          color: AppColor.iconColor,                        ),                      ),                      enabledBorder: OutlineInputBorder(                        borderRadius: BorderRadius.circular(15),                        borderSide: const BorderSide(                          // color: AppColors.borderColor,                        ),                      ),                      focusedBorder: OutlineInputBorder(                        borderRadius: BorderRadius.circular(15),                        borderSide: const BorderSide(                          // color: AppColors.borderColor,                        ),                      ),                    ),                    validator: (value) {                      if (value!.isEmpty) {                        return "Enter Password";                      } else {}                      return null;                    },                  ),                  SizedBox(height: 30),                  ElevatedButton(                    style: ElevatedButton.styleFrom(                      backgroundColor: AppColor.buttonColor,                      fixedSize: Size(                        MediaQuery.of(context).size.width * 0.9,                        50,                      ),                      shape: RoundedRectangleBorder(                        borderRadius: BorderRadius.circular(15),                      ),                    ),                    onPressed: () {                      if (formKey.currentState!.validate()) {                        controller.login(                          controller.emailController.text,                          controller.passwordController.text,                        );                      }                    },                    child:                        controller.isLoading.value                            ? CircularProgressIndicator(color: Colors.white,)                            : Text("Login", style: TextStyle(fontFamily: "Proxima"),),                  ),                ],              ),            ),          ),        ),      ),    );  }}