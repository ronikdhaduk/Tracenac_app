import 'dart:developer';import 'package:flutter/cupertino.dart';import 'package:get/get.dart';import 'package:get_storage/get_storage.dart';import 'package:tracenac/core/APIClass/APIClass.dart';import 'package:tracenac/features/dashboard/ui/dashboard_screen.dart';import '../../../core/utils/flush_bar_helper.dart';import '../data/repository/login_repository/login_repository.dart';final localStorage = GetStorage();class LoginController extends GetxController{  RxBool isLoading = false.obs;  RxBool isPasswordVisibility = false.obs;  TextEditingController emailController = TextEditingController();  TextEditingController passwordController = TextEditingController();  final APIClass _apiClass = APIClass();  LoginRepository? loginRepository;  Future<void> login(email, password)async{    try{      isLoading(true);      var response = await _apiClass.login(email, password);      if(response.status == true){        localStorage.write("login", "success");        localStorage.write("tenantId", "${response.msg?.tenantId}");        localStorage.write("access_token", "${response.msg?.token}");        SnackBarHelper.show("Success", "Login Success");        log("login tenantId===> ${localStorage.read("tenantId")}");        Get.offAll(()=> DashboardScreen());        isLoading(false);      }else{        SnackBarHelper.show("Error", "Login Failed");        isLoading(false);      }    }catch(e){      SnackBarHelper.show("Error", "$e");      isLoading(false);    }finally{      isLoading(false);      emailController.clear();      passwordController.clear();    }  }}