import 'dart:convert';import 'dart:developer';import 'package:tracenac/core/utils/app_url.dart';import 'package:tracenac/features/report_template/data/report_template_model_class/report_template_model_class.dart';import 'package:tracenac/features/report_template/data/repository/report_template_repository.dart';import '../../../../core/services/network/network_api_services.dart';class ReportTemplateHttpApiRepository implements ReportTemplateRepository {  final _api = NetworkApiServices();  @override  Future<List<ReportTemplateModelClass>> reportTemplateApi() async {    final response = await _api.getApi(AppUrl.reportTemplate);    log("report Template response===> $response");    final parsed = jsonDecode(response) as List;    return parsed.map((json) => ReportTemplateModelClass.fromJson(json)).toList();  }}