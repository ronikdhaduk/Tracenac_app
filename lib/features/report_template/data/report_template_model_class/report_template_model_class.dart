class ReportTemplateModelClass {  final String id;  final String tenantId;  final String name;  final String image;  final String placement;  final String reportFor;  final List<String> assetCategories;  final ReportType reportType;  final Reason reason;  final DateTime createdAt;  final DateTime updatedAt;  ReportTemplateModelClass({    required this.id,    required this.tenantId,    required this.name,    required this.image,    required this.placement,    required this.reportFor,    required this.assetCategories,    required this.reportType,    required this.reason,    required this.createdAt,    required this.updatedAt,  });  factory ReportTemplateModelClass.fromJson(Map<String, dynamic> json) {    return ReportTemplateModelClass(      id: json['id'],      tenantId: json['tenantId'],      name: json['name'],      image: json['image'],      placement: json['placement'],      reportFor: json['reportFor'],      assetCategories: List<String>.from(json['assetCategories']),      reportType: ReportType.fromJson(json['reportType']),      reason: Reason.fromJson(json['reason']),      createdAt: DateTime.parse(json['createdAt']),      updatedAt: DateTime.parse(json['updatedAt']),    );  }}class ReportType {  final String id;  final String tenantId;  final String name;  final DateTime createdAt;  final DateTime updatedAt;  ReportType({    required this.id,    required this.tenantId,    required this.name,    required this.createdAt,    required this.updatedAt,  });  factory ReportType.fromJson(Map<String, dynamic> json) {    return ReportType(      id: json['_id'],      tenantId: json['tenantId'],      name: json['name'],      createdAt: DateTime.parse(json['createdAt']),      updatedAt: DateTime.parse(json['updatedAt']),    );  }}class Reason {  final String id;  final String tenantId;  final String reportType;  final String name;  final List<Field> fields;  final List<SystemGeneratedField> systemGeneratedFields;  final DateTime createdAt;  final DateTime updatedAt;  Reason({    required this.id,    required this.tenantId,    required this.reportType,    required this.name,    required this.fields,    required this.systemGeneratedFields,    required this.createdAt,    required this.updatedAt,  });  factory Reason.fromJson(Map<String, dynamic> json) {    return Reason(      id: json['_id'],      tenantId: json['tenantId'],      reportType: json['reportType'],      name: json['name'],      fields: List<Field>.from(json['fields'].map((e) => Field.fromJson(e))),      systemGeneratedFields: List<SystemGeneratedField>.from(json['systemGeneratedFields'].map((e) => SystemGeneratedField.fromJson(e))),      createdAt: DateTime.parse(json['createdAt']),      updatedAt: DateTime.parse(json['updatedAt']),    );  }}class Field {  final String id;  final String name;  final String type;  final bool isDefault;  final List<String> options;  Field({    required this.id,    required this.name,    required this.type,    required this.isDefault,    required this.options,  });  factory Field.fromJson(Map<String, dynamic> json) {    return Field(      id: json['id'],      name: json['name'],      type: json['type'],      isDefault: json['isDefault'],      options: List<String>.from(json['options']),    );  }}class SystemGeneratedField {  final String collection;  final List<String> fields;  final String apiEndpoint;  SystemGeneratedField({    required this.collection,    required this.fields,    required this.apiEndpoint,  });  factory SystemGeneratedField.fromJson(Map<String, dynamic> json) {    return SystemGeneratedField(      collection: json['collection'],      fields: List<String>.from(json['fields']),      apiEndpoint: json['apiEndpoint'],    );  }}