import 'package:tracenac/core/APIClass/APIClass.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import '../model_class/PartnerModelClass.dart';class PartnerController extends GetxController{  final APIClass _apiClass = APIClass();  RxBool isLoading = false.obs;  PartnerModelClass? partnerModelClass;  List<Msg>? allPartner = [];  List<Msg>? filteredPartner = [];  Future<void> getTracenacPartener(text)async{    isLoading(true);    partnerModelClass = await _apiClass.getTracenacPartnerApi(text);    if(partnerModelClass?.status == true){      isLoading(false);    }else{      Get.snackbar("Failed", "Something Wrong?", backgroundColor: Colors.white, colorText: Colors.black);      isLoading(false);    }  }  void filterPartnersFunc(String query) {    final lowerQuery = query.toLowerCase();    filteredPartner = allPartner!.where((user) {      final name = user.partnerName?.toLowerCase() ?? '';      final email = user.partnerUserEmailId?.toLowerCase() ?? '';      return name.contains(lowerQuery) || email.contains(lowerQuery);    }).toList();    update();  }}