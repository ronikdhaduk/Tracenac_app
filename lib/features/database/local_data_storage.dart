import 'dart:developer';import 'package:flutter/material.dart';import 'package:tracenac/core/utils/app_color.dart';import 'package:tracenac/features/database/DatabaseHelper.dart';import '../create_report/create_report_screen/manual/manual_report_screen.dart';class LocalDataStorage extends StatefulWidget {  final String partnerId;  final String partnerName;  const LocalDataStorage({super.key, required this.partnerId, required this.partnerName});  @override  State<LocalDataStorage> createState() => _LocalDataStorageState();}class _LocalDataStorageState extends State<LocalDataStorage> {  final dbHelper = DatabaseHelper.instance;  bool isloaging = true;  List reportList = [];  List reportDataList = [];  var data;  @override  void initState() {    // dealerId =int.parse(widget.partnerId);    // TODO: implement initState    fetchReportList();    super.initState();  }  fetchReportList() async {    log("My LogData ==> dealerId ${widget.partnerId}");    reportList = await dbHelper.getReportsByDealerId(int.parse(widget.partnerId));    print('Reports for Dealer ID $reportList');    setState(() {      isloaging = false;    });  }  getReportData(reportId, creation) async {    log("My LogData ==> getReportData creation if ${creation.toString()}");/**/    Navigator.of(context).push(MaterialPageRoute(builder: (context) => ListManualReport(          creation: '',          partnerName: widget.partnerName,          partner: widget.partnerId,          reportId: reportId,          reportDataItems: [],        ),),);  }  @override  Widget build(BuildContext context) {    return SafeArea(        child: Scaffold(          appBar: AppBar(              title: Text(                "Local Data",                style: TextStyle(color: Colors.white),              ),              backgroundColor: AppColor.appBarColor),          body: isloaging              ? Center(child: CircularProgressIndicator())              : reportList.isEmpty              ? Center(            // color: Colors.red,            child: Text("No Report Found "),          )              : ListView.builder(              itemCount: reportList.length,              itemBuilder: (context, index) {                log("My LogData ==> reportList ${reportList[index]['ReportId']}");                return Container(                  margin: EdgeInsets.only(top: 5),                  child: ListTile(                    tileColor: AppColor.appBarColor,                    leading: Icon(                      Icons.note_alt,                      size: 35,                      // color: Color(0xFFFF9999),                      color: Colors.white,                    ),                    title: Text(                      reportList[index]['ReportId'],                      style: TextStyle(                        fontWeight: FontWeight.w500,                      ),                    ),                    trailing: Icon(Icons.keyboard_arrow_right),                    onTap: () async {                      getReportData(reportList[index]['ReportId'],reportList[index]['Creation_Type']);                    },                  ),                );              }),        ));  }}