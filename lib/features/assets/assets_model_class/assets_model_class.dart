class AssetsModelClass {  bool? status;  List<AssetsMsg>? asetsMsg;  AssetsModelClass({this.status, this.asetsMsg});  AssetsModelClass.fromJson(Map<String, dynamic> json) {    status = json['status'];    if (json['msg'] != null) {      asetsMsg = <AssetsMsg>[];      json['msg'].forEach((v) {        asetsMsg!.add( AssetsMsg.fromJson(v));      });    }  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = <String, dynamic>{};    data['status'] = status;    if (asetsMsg != null) {      data['msg'] = asetsMsg!.map((v) => v.toJson()).toList();    }    return data;  }}class AssetsMsg {  Location? location;  String? sId;  String? tenantId;  String? assetId;  String? assetName;  String? assetCode;  String? assetType;  String? categoryId;  String? departmentId;  String? locationId;  String? costCentreId;  String? purchaseDate;  PurchaseCost? purchaseCost;  String? depreciationMethod;  PurchaseCost? depreciationRate;  int? usefulLife;  PurchaseCost? salvageValue;  PurchaseCost? marketValuation;  String? status;  String? warrantyEndDate;  String? insuranceEndDate;  String? amcEndDate;  ShiftUsageDetails? shiftUsageDetails;  String? barcodeLink;  PurchaseCost? impairmentValue;  String? createdAt;  String? updatedAt;  int? iV;  AssetsMsg(      {this.location,        this.sId,        this.tenantId,        this.assetId,        this.assetName,        this.assetCode,        this.assetType,        this.categoryId,        this.departmentId,        this.locationId,        this.costCentreId,        this.purchaseDate,        this.purchaseCost,        this.depreciationMethod,        this.depreciationRate,        this.usefulLife,        this.salvageValue,        this.marketValuation,        this.status,        this.warrantyEndDate,        this.insuranceEndDate,        this.amcEndDate,        this.shiftUsageDetails,        this.barcodeLink,        this.impairmentValue,        this.createdAt,        this.updatedAt,        this.iV});  AssetsMsg.fromJson(Map<String, dynamic> json) {    location = json['location'] != null        ? Location.fromJson(json['location'])        : null;    sId = json['_id'];    tenantId = json['tenantId'];    assetId = json['assetId'];    assetName = json['assetName'];    assetCode = json['assetCode'];    assetType = json['assetType'];    categoryId = json['categoryId'];    departmentId = json['departmentId'];    locationId = json['locationId'];    costCentreId = json['costCentreId'];    purchaseDate = json['purchaseDate'];    purchaseCost = json['purchaseCost'] != null        ? PurchaseCost.fromJson(json['purchaseCost'])        : null;    depreciationMethod = json['depreciationMethod'];    depreciationRate = json['depreciationRate'] != null        ?  PurchaseCost.fromJson(json['depreciationRate'])        : null;    usefulLife = json['usefulLife'];    salvageValue = json['salvageValue'] != null        ? PurchaseCost.fromJson(json['salvageValue'])        : null;    marketValuation = json['marketValuation'] != null        ? PurchaseCost.fromJson(json['marketValuation'])        : null;    status = json['status'];    warrantyEndDate = json['warrantyEndDate'];    insuranceEndDate = json['insuranceEndDate'];    amcEndDate = json['amcEndDate'];    shiftUsageDetails = json['shiftUsageDetails'] != null        ? ShiftUsageDetails.fromJson(json['shiftUsageDetails'])        : null;    barcodeLink = json['barcodeLink'];    impairmentValue = json['impairmentValue'] != null        ?  PurchaseCost.fromJson(json['impairmentValue'])        : null;    createdAt = json['createdAt'];    updatedAt = json['updatedAt'];    iV = json['__v'];  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = <String, dynamic>{};    if (location != null) {      data['location'] = location!.toJson();    }    data['_id'] = sId;    data['tenantId'] = tenantId;    data['assetId'] = assetId;    data['assetName'] = assetName;    data['assetCode'] = assetCode;    data['assetType'] = assetType;    data['categoryId'] = categoryId;    data['departmentId'] = departmentId;    data['locationId'] = locationId;    data['costCentreId'] = costCentreId;    data['purchaseDate'] = purchaseDate;    if (purchaseCost != null) {      data['purchaseCost'] = purchaseCost!.toJson();    }    data['depreciationMethod'] = depreciationMethod;    if (depreciationRate != null) {      data['depreciationRate'] = depreciationRate!.toJson();    }    data['usefulLife'] = usefulLife;    if (salvageValue != null) {      data['salvageValue'] = salvageValue!.toJson();    }    if (marketValuation != null) {      data['marketValuation'] = marketValuation!.toJson();    }    data['status'] = status;    data['warrantyEndDate'] = warrantyEndDate;    data['insuranceEndDate'] = insuranceEndDate;    data['amcEndDate'] = amcEndDate;    if (shiftUsageDetails != null) {      data['shiftUsageDetails'] = shiftUsageDetails!.toJson();    }    data['barcodeLink'] = barcodeLink;    if (impairmentValue != null) {      data['impairmentValue'] = impairmentValue!.toJson();    }    data['createdAt'] = createdAt;    data['updatedAt'] = updatedAt;    data['__v'] = iV;    return data;  }}class Location {  double? latitude;  double? longitude;  Location({this.latitude, this.longitude});  Location.fromJson(Map<String, dynamic> json) {    latitude = json['latitude'];    longitude = json['longitude'];  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = <String, dynamic>{};    data['latitude'] = latitude;    data['longitude'] = longitude;    return data;  }}class PurchaseCost {  String? numberDecimal;  PurchaseCost({this.numberDecimal});  PurchaseCost.fromJson(Map<String, dynamic> json) {    numberDecimal = json['$numberDecimal'];  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = <String, dynamic>{};    data['$numberDecimal'] = numberDecimal;    return data;  }}class ShiftUsageDetails {  String? shift1;  String? shift2;  String? notes;  ShiftUsageDetails({this.shift1, this.shift2, this.notes});  ShiftUsageDetails.fromJson(Map<String, dynamic> json) {    shift1 = json['shift1'];    shift2 = json['shift2'];    notes = json['notes'];  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = <String, dynamic>{};    data['shift1'] = shift1;    data['shift2'] = shift2;    data['notes'] = notes;    return data;  }}