import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:get/get_core/src/get_main.dart';import 'package:hand_signature/signature.dart';void main() => runApp(MaterialApp(home: MakeReportScreen()));class MakeReportScreen extends StatefulWidget {  @override  _MakeReportScreenState createState() => _MakeReportScreenState();}class _MakeReportScreenState extends State<MakeReportScreen>    with SingleTickerProviderStateMixin {  late TabController _tabController;  HandSignatureControl control = HandSignatureControl(    threshold: 0.01,    smoothRatio: 0.65,    velocityRange: 2.0,  );  @override  void initState() {    _tabController = TabController(length: 4, vsync: this);    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        leading: BackButton(color: Colors.black),        backgroundColor: Colors.white,        title: Text("Make Report", style: TextStyle(color: Colors.black)),        elevation: 0,      ),      body: Column(        crossAxisAlignment: CrossAxisAlignment.start,        children: [          Padding(            padding: EdgeInsets.symmetric(horizontal: 16.0),            child: RichText(              text: TextSpan(                children: [                  TextSpan(                    text: "Report completion:  ",                    style: TextStyle(                      fontWeight: FontWeight.bold,                      color: Colors.black,                    ),                  ),                  TextSpan(                    text: "33%",                    style: TextStyle(                      fontWeight: FontWeight.bold,                      color: Colors.blue,                    ),                  ),                ],              ),            ),          ),          SizedBox(height: 10),          Padding(            padding: EdgeInsets.symmetric(horizontal: 16.0, vertical: 10),            child: LinearProgressIndicator(              value: 0.33,              minHeight: 10,              borderRadius: BorderRadius.circular(15),              backgroundColor: Colors.blue.shade100,              valueColor: AlwaysStoppedAnimation<Color>(Colors.blue),            ),          ),          TabBar(            controller: _tabController,            isScrollable: true,            labelColor: Colors.blue,            unselectedLabelColor: Colors.grey,            indicatorColor: Colors.blue,            tabs: const [              Tab(text: "Product Details"),              Tab(text: "System Data"),              Tab(text: "Review"),              Tab(text: "Finalize"),            ],          ),          Expanded(            child: TabBarView(              controller: _tabController,              children: [                _buildFormTab(),                _buildSystemDataTab(),                _buildSystemDataTab(),                _finalizeReport(),              ],            ),          ),        ],      ),    );  }  Widget _buildFormTab() {    return SingleChildScrollView(      padding: const EdgeInsets.all(16),      child: Column(        children: [          _buildTextField(label: "Asset ID", hintText: "Enter asset ID"),          const SizedBox(height: 12),          _buildDropdownField(label: "Report Name"),          const SizedBox(height: 12),          _buildTextField(label: "Name", initialValue: "James Harrid"),          const SizedBox(height: 12),          _buildTextField(label: "Phone", initialValue: "123-456-7890"),          const SizedBox(height: 12),          _buildTextField(label: "Email", initialValue: "example@email.com"),          const SizedBox(height: 12),          _buildPasswordField(),          const SizedBox(height: 12),          _buildTextField(label: "Birthday", hintText: "Set birthday"),          const SizedBox(height: 24),          SizedBox(            width: double.infinity,            child: ElevatedButton(              style: ElevatedButton.styleFrom(                padding: const EdgeInsets.symmetric(vertical: 16),                shape: RoundedRectangleBorder(                  borderRadius: BorderRadius.circular(12),                ),              ),              onPressed: () {                if (_tabController.index < _tabController.length - 1) {                  _tabController.animateTo(_tabController.index + 1);                }              },              child: const Text("Next"),            ),          ),        ],      ),    );  }  Widget _buildSystemDataTab() {    return LayoutBuilder(      builder: (context, constraints) {        return SingleChildScrollView(          padding: const EdgeInsets.all(16),          child: ConstrainedBox(            constraints: BoxConstraints(minHeight: constraints.maxHeight),            child: IntrinsicHeight(              child: Column(                children: [                  _buildTextField(label: "Name", initialValue: "James Harrid"),                  const SizedBox(height: 12),                  _buildTextField(label: "Phone", initialValue: "123-456-7890"),                  const SizedBox(height: 12),                  _buildTextField(                    label: "Email",                    initialValue: "example@email.com",                  ),                  const SizedBox(height: 12),                  _buildPasswordField(),                  const SizedBox(height: 12),                  _buildTextField(label: "Birthday", hintText: "Set birthday"),                  const Spacer(),                  SizedBox(                    width: double.infinity,                    child: ElevatedButton(                      style: ElevatedButton.styleFrom(                        padding: const EdgeInsets.symmetric(vertical: 16),                        shape: RoundedRectangleBorder(                          borderRadius: BorderRadius.circular(12),                        ),                      ),                      onPressed: () {                        if (_tabController.index < _tabController.length - 1) {                          _tabController.animateTo(_tabController.index + 1);                        }                      },                      child: const Text("Next"),                    ),                  ),                ],              ),            ),          ),        );      },    );  }  Widget _buildTextField({    required String label,    String? initialValue,    String? hintText,    bool obscure = false,  }) {    return Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        Text(          label,          style: const TextStyle(fontWeight: FontWeight.w600, fontSize: 14),        ),        const SizedBox(height: 4),        TextFormField(          initialValue: initialValue,          obscureText: obscure,          decoration: InputDecoration(            hintText: hintText,            border: OutlineInputBorder(              borderRadius: BorderRadius.circular(8),              borderSide: BorderSide(color: Colors.grey.shade300),            ),            filled: true,            fillColor: Colors.white,          ),        ),      ],    );  }  Widget _buildPasswordField() {    return Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        const Text(          "Password",          style: TextStyle(fontWeight: FontWeight.w600, fontSize: 14),        ),        const SizedBox(height: 4),        TextFormField(          obscureText: true,          initialValue: "***********",          decoration: InputDecoration(            suffixIcon: Icon(Icons.visibility_off),            border: OutlineInputBorder(              borderRadius: BorderRadius.circular(8),              borderSide: BorderSide(color: Colors.grey.shade300),            ),            filled: true,            fillColor: Colors.white,          ),        ),      ],    );  }  Widget _buildDropdownField({required String label}) {    String? selectedValue;    return Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        Text(          label,          style: const TextStyle(fontWeight: FontWeight.w600, fontSize: 14),        ),        const SizedBox(height: 4),        DropdownButtonFormField<String>(          decoration: InputDecoration(            border: OutlineInputBorder(borderRadius: BorderRadius.circular(8)),            filled: true,            fillColor: Colors.white,          ),          value: selectedValue,          hint: const Text("Select report"),          items:              [                'Report A',                'Report B',              ].map((e) => DropdownMenuItem(value: e, child: Text(e))).toList(),          onChanged: (value) {},        ),      ],    );  }  Widget _finalizeReport() {    return DefaultTabController(      length: 2,      child: Padding(        padding: const EdgeInsets.all(16.0),        child: Column(          crossAxisAlignment: CrossAxisAlignment.start,          children: [            const SizedBox(height: 4),            Padding(              padding: const EdgeInsets.symmetric(vertical: 8.0),              child: Container(                height: Get.height * 0.06,                width: Get.width,                decoration: BoxDecoration(                  borderRadius: BorderRadius.circular(50),                  // color: const Color.fromRGBO(0, 149, 117, 0.2),                  color: Colors.blue,                ),                child: TabBar(                  padding: EdgeInsets.all(2),                  dividerHeight: 0,                  unselectedLabelColor: Colors.white,                  // labelColor: Colors.white,                  labelColor: Colors.blue,                  indicator: BoxDecoration(                    borderRadius: BorderRadius.circular(50),                    // color: const Color.fromRGBO(0, 149, 117, 1),                    color: Colors.white,                  ),                  indicatorSize: TabBarIndicatorSize.tab,                  tabs: const [                    Padding(                      padding: EdgeInsets.symmetric(vertical: 8.0),                      child: Center(                        child: Text(                          "Assign Report",                          style: TextStyle(                            fontSize: 12,                            fontFamily: "Onest",                            fontWeight: FontWeight.w400,                          ),                        ),                      ),                    ),                    Padding(                      padding: EdgeInsets.symmetric(vertical: 8.0),                      child: Center(                        child: Text(                          "Finalize Report",                          style: TextStyle(                            fontSize: 12,                            fontFamily: "Onest",                            fontWeight: FontWeight.w400,                          ),                        ),                      ),                    ),                  ],                ),              ),            ),            Expanded(              child: TabBarView(                children: [                  Padding(                    padding: const EdgeInsets.all(8.0),                    child: Center(                      child: Column(                        crossAxisAlignment: CrossAxisAlignment.start,                        children: [                          const SizedBox(height: 24),                          const Text(                            "Assign To",                            style: TextStyle(fontWeight: FontWeight.bold),                          ),                          const SizedBox(height: 8),                          DropdownButtonFormField<String>(                            decoration: const InputDecoration(                              border: OutlineInputBorder(),                            ),                            hint: const Text("Select User"),                            items: const [                              DropdownMenuItem(                                value: "user1",                                child: Text("User 1"),                              ),                              DropdownMenuItem(                                value: "user2",                                child: Text("User 2"),                              ),                            ],                            onChanged: (value) {},                          ),                          const SizedBox(height: 16),                          const Text(                            "Select Partner",                            style: TextStyle(fontWeight: FontWeight.bold),                          ),                          const SizedBox(height: 8),                          DropdownButtonFormField<String>(                            decoration: const InputDecoration(                              border: OutlineInputBorder(),                            ),                            hint: const Text("Select Partner"),                            items: const [                              DropdownMenuItem(                                value: "partner1",                                child: Text("Partner 1"),                              ),                              DropdownMenuItem(                                value: "partner2",                                child: Text("Partner 2"),                              ),                            ],                            onChanged: (value) {},                          ),                          const SizedBox(height: 16),                          const Text(                            "Add Signature",                            style: TextStyle(fontWeight: FontWeight.bold),                          ),                          const SizedBox(height: 8),                          AspectRatio(                            aspectRatio: 2,                            child: Stack(                              children: <Widget>[                                ClipRRect(                                  borderRadius: BorderRadius.circular(13),                                  child: Container(                                    constraints: BoxConstraints.expand(),                                    color: Colors.grey.shade300,                                    child: HandSignature(                                      control: control,                                      type: SignatureDrawType.shape,                                    ),                                  ),                                ),                                CustomPaint(                                  painter: DebugSignaturePainterCP(                                    control: control,                                    cp: false,                                    cpStart: false,                                    cpEnd: false,                                  ),                                ),                              ],                            ),                          ),                          const Spacer(),                          SizedBox(                            width: double.infinity,                            child: ElevatedButton(                              style: ElevatedButton.styleFrom(                                padding: const EdgeInsets.symmetric(                                  vertical: 16,                                ),                                backgroundColor: Colors.blue,                                shape: RoundedRectangleBorder(                                  borderRadius: BorderRadius.circular(12),                                ),                              ),                              onPressed: () {                                // Submit logic                              },                              child: const Text("Submit"),                            ),                          ),                        ],                      ),                    ),                  ),                  Padding(                    padding: const EdgeInsets.all(8.0),                    child: Center(                      child: Column(                        crossAxisAlignment: CrossAxisAlignment.start,                        children: [                          const SizedBox(height: 24),                          const Text(                            "Please note: submission is final—no further edits allowed.",                            style: TextStyle(fontWeight: FontWeight.bold),                          ),                          const SizedBox(height: 195),                          const Text(                            "Add Signature",                            style: TextStyle(fontWeight: FontWeight.bold),                          ),                          const SizedBox(height: 8),                          AspectRatio(                            aspectRatio: 2,                            child: Stack(                              children: <Widget>[                                ClipRRect(                                  borderRadius: BorderRadius.circular(13),                                  child: Container(                                    constraints: BoxConstraints.expand(),                                    color: Colors.grey.shade300,                                    child: HandSignature(                                      control: control,                                      type: SignatureDrawType.shape,                                    ),                                  ),                                ),                                CustomPaint(                                  painter: DebugSignaturePainterCP(                                    control: control,                                    cp: false,                                    cpStart: false,                                    cpEnd: false,                                  ),                                ),                              ],                            ),                          ),                          const Spacer(),                          SizedBox(                            width: double.infinity,                            child: ElevatedButton(                              style: ElevatedButton.styleFrom(                                padding: const EdgeInsets.symmetric(                                  vertical: 16,                                ),                                backgroundColor: Colors.blue,                                shape: RoundedRectangleBorder(                                  borderRadius: BorderRadius.circular(12),                                ),                              ),                              onPressed: () {                                // Submit logic                              },                              child: const Text("Submit"),                            ),                          ),                        ],                      ),                    ),                  ),                ],              ),            ),          ],        ),      ),    );  }}